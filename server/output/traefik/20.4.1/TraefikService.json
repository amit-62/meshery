{"kind":"TraefikService","apiVersion":"v1alpha1","display-name":"Traefik Service","format":"JSON","metadata":{"Helm Chart":"traefik","Logo URL":"","Primary Color":"#9D0FB0","Project Name":"traefik-mesh","SVG_Color":"","SVG_White":"\u003csvg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cg clip-path=\"url(#a)\"\u003e\u003cpath d=\"m11.54 6.143.046.025 3.928 2.226a.878.878 0 0 0 .865 0l3.896-2.202a1.315 1.315 0 0 1 1.792.482 1.336 1.336 0 0 1-.45 1.808l-.045.027-2.249 1.273a.442.442 0 0 0-.224.386.446.446 0 0 0 .224.386l6.072 3.442a.875.875 0 0 0 .865 0l3.756-2.129a1.315 1.315 0 0 1 1.796.478 1.335 1.335 0 0 1-.453 1.812l-.045.027-2.115 1.196a.442.442 0 0 0-.164.61c.04.067.096.123.164.162l2.125 1.204a1.329 1.329 0 0 1 .518 1.79 1.316 1.316 0 0 1-1.771.551l-.046-.025-3.766-2.135a.877.877 0 0 0-.865 0l-6.14 3.48a.441.441 0 0 0-.164.61.44.44 0 0 0 .164.161l2.537 1.438a1.336 1.336 0 0 1 .51 1.785 1.318 1.318 0 0 1-1.763.556l-.046-.025-4.177-2.369a.878.878 0 0 0-.865 0l-4.215 2.392a1.315 1.315 0 0 1-1.79-.48 1.335 1.335 0 0 1 .447-1.81l.045-.026 2.572-1.46a.44.44 0 0 0 .167-.604.432.432 0 0 0-.167-.168l-6.084-3.448a.878.878 0 0 0-.866 0l-3.582 2.027a1.316 1.316 0 0 1-1.794-.48 1.336 1.336 0 0 1 .453-1.81l.045-.027 1.937-1.096a.44.44 0 0 0 .225-.386.444.444 0 0 0-.225-.386L.684 14.314a1.336 1.336 0 0 1-.51-1.785 1.315 1.315 0 0 1 1.762-.556l.047.025 3.579 2.029a.876.876 0 0 0 .864 0l6.143-3.476a.442.442 0 0 0 .225-.386.444.444 0 0 0-.225-.386l-2.281-1.295a1.336 1.336 0 0 1-.51-1.785c.164-.305.44-.534.769-.638.329-.104.685-.074.993.083v-.001Zm3.973 5.793-6.144 3.476a.442.442 0 0 0-.165.61c.04.068.096.124.165.163l6.08 3.446a.876.876 0 0 0 .866 0l6.138-3.48a.442.442 0 0 0 .164-.609.443.443 0 0 0-.164-.162l-6.076-3.444a.877.877 0 0 0-.865 0Z\" fill=\"#fff\"/\u003e\u003c/g\u003e\u003cdefs\u003e\u003cclipPath id=\"a\"\u003e\u003cpath fill=\"#fff\" d=\"M0 0h32v32H0z\"/\u003e\u003c/clipPath\u003e\u003c/defs\u003e\u003c/svg\u003e","Secondary Color":"#e281f0","Shape":"circle"},"model":{"name":"traefik","version":"20.4.1","display-name":"traefik-mesh","category":"Orchestration \u0026 Management","sub-category":"Service Proxy"},"schema":"{\n \"description\": \"TraefikServiceSpec defines the desired state of a TraefikService.\",\n \"properties\": {\n  \"mirroring\": {\n   \"description\": \"Mirroring defines the Mirroring service configuration.\",\n   \"properties\": {\n    \"kind\": {\n     \"description\": \"Kind defines the kind of the Service.\",\n     \"enum\": [\n      \"Service\",\n      \"TraefikService\"\n     ],\n     \"type\": \"string\"\n    },\n    \"maxBodySize\": {\n     \"description\": \"MaxBodySize defines the maximum size allowed for the body of the request. If the body is larger, the request is not mirrored. Default value is -1, which means unlimited size.\",\n     \"format\": \"int64\",\n     \"type\": \"integer\"\n    },\n    \"mirrors\": {\n     \"description\": \"Mirrors defines the list of mirrors where Traefik will duplicate the traffic.\",\n     \"items\": {\n      \"description\": \"MirrorService holds the mirror configuration.\",\n      \"properties\": {\n       \"kind\": {\n        \"description\": \"Kind defines the kind of the Service.\",\n        \"enum\": [\n         \"Service\",\n         \"TraefikService\"\n        ],\n        \"type\": \"string\"\n       },\n       \"name\": {\n        \"description\": \"Name defines the name of the referenced Kubernetes Service or TraefikService. The differentiation between the two is specified in the Kind field.\",\n        \"type\": \"string\"\n       },\n       \"namespace\": {\n        \"description\": \"Namespace defines the namespace of the referenced Kubernetes Service or TraefikService.\",\n        \"type\": \"string\"\n       },\n       \"passHostHeader\": {\n        \"description\": \"PassHostHeader defines whether the client Host header is forwarded to the upstream Kubernetes Service. By default, passHostHeader is true.\",\n        \"type\": \"boolean\"\n       },\n       \"percent\": {\n        \"description\": \"Percent defines the part of the traffic to mirror. Supported values: 0 to 100.\",\n        \"type\": \"integer\"\n       },\n       \"port\": {\n        \"anyOf\": [\n         {\n          \"type\": \"integer\"\n         },\n         {\n          \"type\": \"string\"\n         }\n        ],\n        \"description\": \"Port defines the port of a Kubernetes Service. This can be a reference to a named port.\",\n        \"x-kubernetes-int-or-string\": true\n       },\n       \"responseForwarding\": {\n        \"description\": \"ResponseForwarding defines how Traefik forwards the response from the upstream Kubernetes Service to the client.\",\n        \"properties\": {\n         \"flushInterval\": {\n          \"description\": \"FlushInterval defines the interval, in milliseconds, in between flushes to the client while copying the response body. A negative value means to flush immediately after each write to the client. This configuration is ignored when ReverseProxy recognizes a response as a streaming response; for such responses, writes are flushed to the client immediately. Default: 100ms\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"scheme\": {\n        \"description\": \"Scheme defines the scheme to use for the request to the upstream Kubernetes Service. It defaults to https when Kubernetes Service port is 443, http otherwise.\",\n        \"type\": \"string\"\n       },\n       \"serversTransport\": {\n        \"description\": \"ServersTransport defines the name of ServersTransport resource to use. It allows to configure the transport between Traefik and your servers. Can only be used on a Kubernetes Service.\",\n        \"type\": \"string\"\n       },\n       \"sticky\": {\n        \"description\": \"Sticky defines the sticky sessions configuration. More info: https://doc.traefik.io/traefik/v2.9/routing/services/#sticky-sessions\",\n        \"properties\": {\n         \"cookie\": {\n          \"description\": \"Cookie defines the sticky cookie configuration.\",\n          \"properties\": {\n           \"httpOnly\": {\n            \"description\": \"HTTPOnly defines whether the cookie can be accessed by client-side APIs, such as JavaScript.\",\n            \"type\": \"boolean\"\n           },\n           \"name\": {\n            \"description\": \"Name defines the Cookie name.\",\n            \"type\": \"string\"\n           },\n           \"sameSite\": {\n            \"description\": \"SameSite defines the same site policy. More info: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite\",\n            \"type\": \"string\"\n           },\n           \"secure\": {\n            \"description\": \"Secure defines whether the cookie can only be transmitted over an encrypted connection (i.e. HTTPS).\",\n            \"type\": \"boolean\"\n           }\n          },\n          \"type\": \"object\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"strategy\": {\n        \"description\": \"Strategy defines the load balancing strategy between the servers. RoundRobin is the only supported value at the moment.\",\n        \"type\": \"string\"\n       },\n       \"weight\": {\n        \"description\": \"Weight defines the weight and should only be specified when Name references a TraefikService object (and to be precise, one that embeds a Weighted Round Robin).\",\n        \"type\": \"integer\"\n       }\n      },\n      \"required\": [\n       \"name\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"name\": {\n     \"description\": \"Name defines the name of the referenced Kubernetes Service or TraefikService. The differentiation between the two is specified in the Kind field.\",\n     \"type\": \"string\"\n    },\n    \"namespace\": {\n     \"description\": \"Namespace defines the namespace of the referenced Kubernetes Service or TraefikService.\",\n     \"type\": \"string\"\n    },\n    \"passHostHeader\": {\n     \"description\": \"PassHostHeader defines whether the client Host header is forwarded to the upstream Kubernetes Service. By default, passHostHeader is true.\",\n     \"type\": \"boolean\"\n    },\n    \"port\": {\n     \"anyOf\": [\n      {\n       \"type\": \"integer\"\n      },\n      {\n       \"type\": \"string\"\n      }\n     ],\n     \"description\": \"Port defines the port of a Kubernetes Service. This can be a reference to a named port.\",\n     \"x-kubernetes-int-or-string\": true\n    },\n    \"responseForwarding\": {\n     \"description\": \"ResponseForwarding defines how Traefik forwards the response from the upstream Kubernetes Service to the client.\",\n     \"properties\": {\n      \"flushInterval\": {\n       \"description\": \"FlushInterval defines the interval, in milliseconds, in between flushes to the client while copying the response body. A negative value means to flush immediately after each write to the client. This configuration is ignored when ReverseProxy recognizes a response as a streaming response; for such responses, writes are flushed to the client immediately. Default: 100ms\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"scheme\": {\n     \"description\": \"Scheme defines the scheme to use for the request to the upstream Kubernetes Service. It defaults to https when Kubernetes Service port is 443, http otherwise.\",\n     \"type\": \"string\"\n    },\n    \"serversTransport\": {\n     \"description\": \"ServersTransport defines the name of ServersTransport resource to use. It allows to configure the transport between Traefik and your servers. Can only be used on a Kubernetes Service.\",\n     \"type\": \"string\"\n    },\n    \"sticky\": {\n     \"description\": \"Sticky defines the sticky sessions configuration. More info: https://doc.traefik.io/traefik/v2.9/routing/services/#sticky-sessions\",\n     \"properties\": {\n      \"cookie\": {\n       \"description\": \"Cookie defines the sticky cookie configuration.\",\n       \"properties\": {\n        \"httpOnly\": {\n         \"description\": \"HTTPOnly defines whether the cookie can be accessed by client-side APIs, such as JavaScript.\",\n         \"type\": \"boolean\"\n        },\n        \"name\": {\n         \"description\": \"Name defines the Cookie name.\",\n         \"type\": \"string\"\n        },\n        \"sameSite\": {\n         \"description\": \"SameSite defines the same site policy. More info: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite\",\n         \"type\": \"string\"\n        },\n        \"secure\": {\n         \"description\": \"Secure defines whether the cookie can only be transmitted over an encrypted connection (i.e. HTTPS).\",\n         \"type\": \"boolean\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"strategy\": {\n     \"description\": \"Strategy defines the load balancing strategy between the servers. RoundRobin is the only supported value at the moment.\",\n     \"type\": \"string\"\n    },\n    \"weight\": {\n     \"description\": \"Weight defines the weight and should only be specified when Name references a TraefikService object (and to be precise, one that embeds a Weighted Round Robin).\",\n     \"type\": \"integer\"\n    }\n   },\n   \"required\": [\n    \"name\"\n   ],\n   \"type\": \"object\"\n  },\n  \"weighted\": {\n   \"description\": \"Weighted defines the Weighted Round Robin configuration.\",\n   \"properties\": {\n    \"services\": {\n     \"description\": \"Services defines the list of Kubernetes Service and/or TraefikService to load-balance, with weight.\",\n     \"items\": {\n      \"description\": \"Service defines an upstream HTTP service to proxy traffic to.\",\n      \"properties\": {\n       \"kind\": {\n        \"description\": \"Kind defines the kind of the Service.\",\n        \"enum\": [\n         \"Service\",\n         \"TraefikService\"\n        ],\n        \"type\": \"string\"\n       },\n       \"name\": {\n        \"description\": \"Name defines the name of the referenced Kubernetes Service or TraefikService. The differentiation between the two is specified in the Kind field.\",\n        \"type\": \"string\"\n       },\n       \"namespace\": {\n        \"description\": \"Namespace defines the namespace of the referenced Kubernetes Service or TraefikService.\",\n        \"type\": \"string\"\n       },\n       \"passHostHeader\": {\n        \"description\": \"PassHostHeader defines whether the client Host header is forwarded to the upstream Kubernetes Service. By default, passHostHeader is true.\",\n        \"type\": \"boolean\"\n       },\n       \"port\": {\n        \"anyOf\": [\n         {\n          \"type\": \"integer\"\n         },\n         {\n          \"type\": \"string\"\n         }\n        ],\n        \"description\": \"Port defines the port of a Kubernetes Service. This can be a reference to a named port.\",\n        \"x-kubernetes-int-or-string\": true\n       },\n       \"responseForwarding\": {\n        \"description\": \"ResponseForwarding defines how Traefik forwards the response from the upstream Kubernetes Service to the client.\",\n        \"properties\": {\n         \"flushInterval\": {\n          \"description\": \"FlushInterval defines the interval, in milliseconds, in between flushes to the client while copying the response body. A negative value means to flush immediately after each write to the client. This configuration is ignored when ReverseProxy recognizes a response as a streaming response; for such responses, writes are flushed to the client immediately. Default: 100ms\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"scheme\": {\n        \"description\": \"Scheme defines the scheme to use for the request to the upstream Kubernetes Service. It defaults to https when Kubernetes Service port is 443, http otherwise.\",\n        \"type\": \"string\"\n       },\n       \"serversTransport\": {\n        \"description\": \"ServersTransport defines the name of ServersTransport resource to use. It allows to configure the transport between Traefik and your servers. Can only be used on a Kubernetes Service.\",\n        \"type\": \"string\"\n       },\n       \"sticky\": {\n        \"description\": \"Sticky defines the sticky sessions configuration. More info: https://doc.traefik.io/traefik/v2.9/routing/services/#sticky-sessions\",\n        \"properties\": {\n         \"cookie\": {\n          \"description\": \"Cookie defines the sticky cookie configuration.\",\n          \"properties\": {\n           \"httpOnly\": {\n            \"description\": \"HTTPOnly defines whether the cookie can be accessed by client-side APIs, such as JavaScript.\",\n            \"type\": \"boolean\"\n           },\n           \"name\": {\n            \"description\": \"Name defines the Cookie name.\",\n            \"type\": \"string\"\n           },\n           \"sameSite\": {\n            \"description\": \"SameSite defines the same site policy. More info: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite\",\n            \"type\": \"string\"\n           },\n           \"secure\": {\n            \"description\": \"Secure defines whether the cookie can only be transmitted over an encrypted connection (i.e. HTTPS).\",\n            \"type\": \"boolean\"\n           }\n          },\n          \"type\": \"object\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"strategy\": {\n        \"description\": \"Strategy defines the load balancing strategy between the servers. RoundRobin is the only supported value at the moment.\",\n        \"type\": \"string\"\n       },\n       \"weight\": {\n        \"description\": \"Weight defines the weight and should only be specified when Name references a TraefikService object (and to be precise, one that embeds a Weighted Round Robin).\",\n        \"type\": \"integer\"\n       }\n      },\n      \"required\": [\n       \"name\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"sticky\": {\n     \"description\": \"Sticky defines whether sticky sessions are enabled. More info: https://doc.traefik.io/traefik/v2.9/routing/providers/kubernetes-crd/#stickiness-and-load-balancing\",\n     \"properties\": {\n      \"cookie\": {\n       \"description\": \"Cookie defines the sticky cookie configuration.\",\n       \"properties\": {\n        \"httpOnly\": {\n         \"description\": \"HTTPOnly defines whether the cookie can be accessed by client-side APIs, such as JavaScript.\",\n         \"type\": \"boolean\"\n        },\n        \"name\": {\n         \"description\": \"Name defines the Cookie name.\",\n         \"type\": \"string\"\n        },\n        \"sameSite\": {\n         \"description\": \"SameSite defines the same site policy. More info: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite\",\n         \"type\": \"string\"\n        },\n        \"secure\": {\n         \"description\": \"Secure defines whether the cookie can only be transmitted over an encrypted connection (i.e. HTTPS).\",\n         \"type\": \"boolean\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Traefik Service\",\n \"type\": \"object\"\n}"}